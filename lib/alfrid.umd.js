!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("events")):"function"==typeof define&&define.amd?define(["exports","events"],e):e((t=t||self).alfrid={},t.EventDispatcher)}(this,(function(t,e){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e;
/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
var i=Object.getOwnPropertySymbols,E=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;function r(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}var s=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},i=0;i<10;i++)e["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var E={};return"abcdefghijklmnopqrst".split("").forEach((function(t){E[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},E)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var s,n,a=r(t),T=1;T<arguments.length;T++){for(var o in s=Object(arguments[T]))E.call(s,o)&&(a[o]=s[o]);if(i){n=i(s);for(var h=0;h<n.length;h++)_.call(s,n[h])&&(a[n[h]]=s[n[h]])}}return a},n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array;function T(t,e){return Math.abs(t-e)<=n*Math.max(1,Math.abs(t),Math.abs(e))}function o(){var t=new a(9);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function h(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t}function R(t,e){if(t===e){var i=e[1],E=e[2],_=e[5];t[1]=e[3],t[2]=e[6],t[3]=i,t[5]=e[7],t[6]=E,t[7]=_}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t}function u(t,e){var i=e[0],E=e[1],_=e[2],r=e[3],s=e[4],n=e[5],a=e[6],T=e[7],o=e[8],h=o*s-n*T,R=-o*r+n*a,u=T*r-s*a,A=i*h+E*R+_*u;return A?(A=1/A,t[0]=h*A,t[1]=(-o*E+_*T)*A,t[2]=(n*E-_*s)*A,t[3]=R*A,t[4]=(o*i-_*a)*A,t[5]=(-n*i+_*r)*A,t[6]=u*A,t[7]=(-T*i+E*a)*A,t[8]=(s*i-E*r)*A,t):null}function A(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function c(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function I(t,e){var i=e[0],E=e[1],_=e[2],r=e[3],s=e[4],n=e[5],a=e[6],T=e[7],o=e[8],h=e[9],R=e[10],u=e[11],A=e[12],c=e[13],I=e[14],N=e[15],l=i*n-E*s,S=i*a-_*s,L=i*T-r*s,f=E*a-_*n,O=E*T-r*n,C=_*T-r*a,M=o*c-h*A,U=o*I-R*A,d=o*N-u*A,P=h*I-R*c,F=h*N-u*c,m=R*N-u*I,B=l*m-S*F+L*P+f*d-O*U+C*M;return B?(B=1/B,t[0]=(n*m-a*F+T*P)*B,t[1]=(_*F-E*m-r*P)*B,t[2]=(c*C-I*O+N*f)*B,t[3]=(R*O-h*C-u*f)*B,t[4]=(a*d-s*m-T*U)*B,t[5]=(i*m-_*d+r*U)*B,t[6]=(I*L-A*C-N*S)*B,t[7]=(o*C-R*L+u*S)*B,t[8]=(s*F-n*d+T*M)*B,t[9]=(E*d-i*F-r*M)*B,t[10]=(A*O-c*L+N*l)*B,t[11]=(h*L-o*O-u*l)*B,t[12]=(n*U-s*P-a*M)*B,t[13]=(i*P-E*U+_*M)*B,t[14]=(c*S-A*f-I*l)*B,t[15]=(o*f-h*S+R*l)*B,t):null}function N(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var l;l=N();const S=()=>{const t=document.createElement("canvas");return!!(t.getContext("experimental-webgl2")||t.getContext("webgl2"))};function L(t,e){const i=t.getExtension(e);if(!i)return!1;const E=e.split("_")[0],_=new RegExp(E+"$");for(const e in i){if("function"==typeof i[e]){const E=e.replace(_,"");e.substring&&(t[E]=i[e].bind(i))}}return!0}const f=["EXT_shader_texture_lod","EXT_sRGB","EXT_frag_depth","OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","WEBGL_depth_texture","EXT_texture_filter_anisotropic","OES_vertex_array_object","ANGLE_instanced_arrays","WEBGL_draw_buffers"],O=["EXT_color_buffer_float"],C=(()=>{let t=!1;return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(t=!0),t})(),M=(t,e)=>{if("number"==typeof t)return T(t,e);if(t.length!==e.length)return!1;let i=!0;return t.forEach(((t,E)=>{i=T(t,e[E])&&i})),i};var U={ACTIVE_ATTRIBUTES:35721,ACTIVE_ATTRIBUTE_MAX_LENGTH:35722,ACTIVE_TEXTURE:34016,ACTIVE_UNIFORMS:35718,ACTIVE_UNIFORM_MAX_LENGTH:35719,ALIASED_LINE_WIDTH_RANGE:33902,ALIASED_POINT_SIZE_RANGE:33901,ALPHA:6406,ALPHA_BITS:3413,ALWAYS:519,ARRAY_BUFFER:34962,ARRAY_BUFFER_BINDING:34964,ATTACHED_SHADERS:35717,BACK:1029,BLEND:3042,BLEND_COLOR:32773,BLEND_DST_ALPHA:32970,BLEND_DST_RGB:32968,BLEND_EQUATION:32777,BLEND_EQUATION_ALPHA:34877,BLEND_EQUATION_RGB:32777,BLEND_SRC_ALPHA:32971,BLEND_SRC_RGB:32969,BLUE_BITS:3412,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,BROWSER_DEFAULT_WEBGL:37444,BUFFER_SIZE:34660,BUFFER_USAGE:34661,BYTE:5120,CCW:2305,CLAMP_TO_EDGE:33071,COLOR_ATTACHMENT0:36064,COLOR_BUFFER_BIT:16384,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,COMPILE_STATUS:35713,COMPRESSED_TEXTURE_FORMATS:34467,CONSTANT_ALPHA:32771,CONSTANT_COLOR:32769,CONTEXT_LOST_WEBGL:37442,CULL_FACE:2884,CULL_FACE_MODE:2885,CURRENT_PROGRAM:35725,CURRENT_VERTEX_ATTRIB:34342,CW:2304,DECR:7683,DECR_WRAP:34056,DELETE_STATUS:35712,DEPTH_ATTACHMENT:36096,DEPTH_BITS:3414,DEPTH_BUFFER_BIT:256,DEPTH_CLEAR_VALUE:2931,DEPTH_COMPONENT:6402,RED:6403,DEPTH_COMPONENT16:33189,DEPTH_FUNC:2932,DEPTH_RANGE:2928,DEPTH_STENCIL:34041,DEPTH_STENCIL_ATTACHMENT:33306,DEPTH_TEST:2929,DEPTH_WRITEMASK:2930,DITHER:3024,DONT_CARE:4352,DST_ALPHA:772,DST_COLOR:774,DYNAMIC_DRAW:35048,ELEMENT_ARRAY_BUFFER:34963,ELEMENT_ARRAY_BUFFER_BINDING:34965,EQUAL:514,FASTEST:4353,FLOAT:5126,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FRAGMENT_SHADER:35632,FRAMEBUFFER:36160,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_BINDING:36006,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_UNSUPPORTED:36061,FRONT:1028,FRONT_AND_BACK:1032,FRONT_FACE:2886,FUNC_ADD:32774,FUNC_REVERSE_SUBTRACT:32779,FUNC_SUBTRACT:32778,GENERATE_MIPMAP_HINT:33170,GEQUAL:518,GREATER:516,GREEN_BITS:3411,HALF_FLOAT:36193,HIGH_FLOAT:36338,HIGH_INT:36341,INCR:7682,INCR_WRAP:34055,INFO_LOG_LENGTH:35716,INT:5124,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,INVALID_ENUM:1280,INVALID_FRAMEBUFFER_OPERATION:1286,INVALID_OPERATION:1282,INVALID_VALUE:1281,INVERT:5386,KEEP:7680,LEQUAL:515,LESS:513,LINEAR:9729,LINEAR_MIPMAP_LINEAR:9987,LINEAR_MIPMAP_NEAREST:9985,LINES:1,LINE_LOOP:2,LINE_STRIP:3,LINE_WIDTH:2849,LINK_STATUS:35714,LOW_FLOAT:36336,LOW_INT:36339,LUMINANCE:6409,LUMINANCE_ALPHA:6410,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_CUBE_MAP_TEXTURE_SIZE:34076,MAX_FRAGMENT_UNIFORM_VECTORS:36349,MAX_RENDERBUFFER_SIZE:34024,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_TEXTURE_SIZE:3379,MAX_VARYING_VECTORS:36348,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VIEWPORT_DIMS:3386,MEDIUM_FLOAT:36337,MEDIUM_INT:36340,MIRRORED_REPEAT:33648,NEAREST:9728,NEAREST_MIPMAP_LINEAR:9986,NEAREST_MIPMAP_NEAREST:9984,NEVER:512,NICEST:4354,NONE:0,NOTEQUAL:517,NO_ERROR:0,NUM_COMPRESSED_TEXTURE_FORMATS:34466,ONE:1,ONE_MINUS_CONSTANT_ALPHA:32772,ONE_MINUS_CONSTANT_COLOR:32770,ONE_MINUS_DST_ALPHA:773,ONE_MINUS_DST_COLOR:775,ONE_MINUS_SRC_ALPHA:771,ONE_MINUS_SRC_COLOR:769,OUT_OF_MEMORY:1285,PACK_ALIGNMENT:3333,POINTS:0,POLYGON_OFFSET_FACTOR:32824,POLYGON_OFFSET_FILL:32823,POLYGON_OFFSET_UNITS:10752,RED_BITS:3410,RENDERBUFFER:36161,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_BINDING:36007,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_STENCIL_SIZE:36181,RENDERBUFFER_WIDTH:36162,RENDERER:7937,REPEAT:10497,REPLACE:7681,RGB:6407,RGB5_A1:32855,RGB565:36194,RGBA:6408,RGBA4:32854,SAMPLER_2D:35678,SAMPLER_CUBE:35680,SAMPLES:32937,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_BUFFERS:32936,SAMPLE_COVERAGE:32928,SAMPLE_COVERAGE_INVERT:32939,SAMPLE_COVERAGE_VALUE:32938,SCISSOR_BOX:3088,SCISSOR_TEST:3089,SHADER_COMPILER:36346,SHADER_SOURCE_LENGTH:35720,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,SHORT:5122,SRC_ALPHA:770,SRC_ALPHA_SATURATE:776,SRC_COLOR:768,STATIC_DRAW:35044,STENCIL_ATTACHMENT:36128,STENCIL_BACK_FAIL:34817,STENCIL_BACK_FUNC:34816,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,STENCIL_BITS:3415,STENCIL_BUFFER_BIT:1024,STENCIL_CLEAR_VALUE:2961,STENCIL_FAIL:2964,STENCIL_FUNC:2962,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_TEST:2960,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STREAM_DRAW:35040,SUBPIXEL_BITS:3408,TEXTURE:5890,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,TEXTURE_2D:3553,TEXTURE_BINDING_2D:32873,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP:34067,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TRIANGLES:4,TRIANGLE_FAN:6,TRIANGLE_STRIP:5,UNPACK_ALIGNMENT:3317,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNSIGNED_BYTE:5121,UNSIGNED_INT:5125,UNSIGNED_SHORT:5123,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,VALIDATE_STATUS:35715,VENDOR:7936,VERSION:7938,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_SHADER:35633,VIEWPORT:2978,ZERO:0,R8:33321},d={0:"NONE",1:"ONE",2:"LINE_LOOP",3:"LINE_STRIP",4:"TRIANGLES",5:"TRIANGLE_STRIP",6:"TRIANGLE_FAN",256:"DEPTH_BUFFER_BIT",512:"NEVER",513:"LESS",514:"EQUAL",515:"LEQUAL",516:"GREATER",517:"NOTEQUAL",518:"GEQUAL",519:"ALWAYS",768:"SRC_COLOR",769:"ONE_MINUS_SRC_COLOR",770:"SRC_ALPHA",771:"ONE_MINUS_SRC_ALPHA",772:"DST_ALPHA",773:"ONE_MINUS_DST_ALPHA",774:"DST_COLOR",775:"ONE_MINUS_DST_COLOR",776:"SRC_ALPHA_SATURATE",1024:"STENCIL_BUFFER_BIT",1028:"FRONT",1029:"BACK",1032:"FRONT_AND_BACK",1280:"INVALID_ENUM",1281:"INVALID_VALUE",1282:"INVALID_OPERATION",1285:"OUT_OF_MEMORY",1286:"INVALID_FRAMEBUFFER_OPERATION",2304:"CW",2305:"CCW",2849:"LINE_WIDTH",2884:"CULL_FACE",2885:"CULL_FACE_MODE",2886:"FRONT_FACE",2928:"DEPTH_RANGE",2929:"DEPTH_TEST",2930:"DEPTH_WRITEMASK",2931:"DEPTH_CLEAR_VALUE",2932:"DEPTH_FUNC",2960:"STENCIL_TEST",2961:"STENCIL_CLEAR_VALUE",2962:"STENCIL_FUNC",2963:"STENCIL_VALUE_MASK",2964:"STENCIL_FAIL",2965:"STENCIL_PASS_DEPTH_FAIL",2966:"STENCIL_PASS_DEPTH_PASS",2967:"STENCIL_REF",2968:"STENCIL_WRITEMASK",2978:"VIEWPORT",3024:"DITHER",3042:"BLEND",3088:"SCISSOR_BOX",3089:"SCISSOR_TEST",3106:"COLOR_CLEAR_VALUE",3107:"COLOR_WRITEMASK",3317:"UNPACK_ALIGNMENT",3333:"PACK_ALIGNMENT",3379:"MAX_TEXTURE_SIZE",3386:"MAX_VIEWPORT_DIMS",3408:"SUBPIXEL_BITS",3410:"RED_BITS",3411:"GREEN_BITS",3412:"BLUE_BITS",3413:"ALPHA_BITS",3414:"DEPTH_BITS",3415:"STENCIL_BITS",3553:"TEXTURE_2D",4352:"DONT_CARE",4353:"FASTEST",4354:"NICEST",5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5124:"INT",5125:"UNSIGNED_INT",5126:"FLOAT",5386:"INVERT",5890:"TEXTURE",6401:"STENCIL_INDEX",6402:"DEPTH_COMPONENT",6403:"RED",6406:"ALPHA",6407:"RGB",6408:"RGBA",6409:"LUMINANCE",6410:"LUMINANCE_ALPHA",7680:"KEEP",7681:"REPLACE",7682:"INCR",7683:"DECR",7936:"VENDOR",7937:"RENDERER",7938:"VERSION",9728:"NEAREST",9729:"LINEAR",9984:"NEAREST_MIPMAP_NEAREST",9985:"LINEAR_MIPMAP_NEAREST",9986:"NEAREST_MIPMAP_LINEAR",9987:"LINEAR_MIPMAP_LINEAR",10240:"TEXTURE_MAG_FILTER",10241:"TEXTURE_MIN_FILTER",10242:"TEXTURE_WRAP_S",10243:"TEXTURE_WRAP_T",10497:"REPEAT",10752:"POLYGON_OFFSET_UNITS",16384:"COLOR_BUFFER_BIT",32769:"CONSTANT_COLOR",32770:"ONE_MINUS_CONSTANT_COLOR",32771:"CONSTANT_ALPHA",32772:"ONE_MINUS_CONSTANT_ALPHA",32773:"BLEND_COLOR",32774:"FUNC_ADD",32777:"BLEND_EQUATION_RGB",32778:"FUNC_SUBTRACT",32779:"FUNC_REVERSE_SUBTRACT",32819:"UNSIGNED_SHORT_4_4_4_4",32820:"UNSIGNED_SHORT_5_5_5_1",32823:"POLYGON_OFFSET_FILL",32824:"POLYGON_OFFSET_FACTOR",32854:"RGBA4",32855:"RGB5_A1",32873:"TEXTURE_BINDING_2D",32926:"SAMPLE_ALPHA_TO_COVERAGE",32928:"SAMPLE_COVERAGE",32936:"SAMPLE_BUFFERS",32937:"SAMPLES",32938:"SAMPLE_COVERAGE_VALUE",32939:"SAMPLE_COVERAGE_INVERT",32968:"BLEND_DST_RGB",32969:"BLEND_SRC_RGB",32970:"BLEND_DST_ALPHA",32971:"BLEND_SRC_ALPHA",33071:"CLAMP_TO_EDGE",33170:"GENERATE_MIPMAP_HINT",33189:"DEPTH_COMPONENT16",33306:"DEPTH_STENCIL_ATTACHMENT",33321:"R8",33635:"UNSIGNED_SHORT_5_6_5",33648:"MIRRORED_REPEAT",33901:"ALIASED_POINT_SIZE_RANGE",33902:"ALIASED_LINE_WIDTH_RANGE",33984:"TEXTURE0",33985:"TEXTURE1",33986:"TEXTURE2",33987:"TEXTURE3",33988:"TEXTURE4",33989:"TEXTURE5",33990:"TEXTURE6",33991:"TEXTURE7",33992:"TEXTURE8",33993:"TEXTURE9",33994:"TEXTURE10",33995:"TEXTURE11",33996:"TEXTURE12",33997:"TEXTURE13",33998:"TEXTURE14",33999:"TEXTURE15",34e3:"TEXTURE16",34001:"TEXTURE17",34002:"TEXTURE18",34003:"TEXTURE19",34004:"TEXTURE20",34005:"TEXTURE21",34006:"TEXTURE22",34007:"TEXTURE23",34008:"TEXTURE24",34009:"TEXTURE25",34010:"TEXTURE26",34011:"TEXTURE27",34012:"TEXTURE28",34013:"TEXTURE29",34014:"TEXTURE30",34015:"TEXTURE31",34016:"ACTIVE_TEXTURE",34024:"MAX_RENDERBUFFER_SIZE",34041:"DEPTH_STENCIL",34055:"INCR_WRAP",34056:"DECR_WRAP",34067:"TEXTURE_CUBE_MAP",34068:"TEXTURE_BINDING_CUBE_MAP",34069:"TEXTURE_CUBE_MAP_POSITIVE_X",34070:"TEXTURE_CUBE_MAP_NEGATIVE_X",34071:"TEXTURE_CUBE_MAP_POSITIVE_Y",34072:"TEXTURE_CUBE_MAP_NEGATIVE_Y",34073:"TEXTURE_CUBE_MAP_POSITIVE_Z",34074:"TEXTURE_CUBE_MAP_NEGATIVE_Z",34076:"MAX_CUBE_MAP_TEXTURE_SIZE",34338:"VERTEX_ATTRIB_ARRAY_ENABLED",34339:"VERTEX_ATTRIB_ARRAY_SIZE",34340:"VERTEX_ATTRIB_ARRAY_STRIDE",34341:"VERTEX_ATTRIB_ARRAY_TYPE",34342:"CURRENT_VERTEX_ATTRIB",34373:"VERTEX_ATTRIB_ARRAY_POINTER",34466:"NUM_COMPRESSED_TEXTURE_FORMATS",34467:"COMPRESSED_TEXTURE_FORMATS",34660:"BUFFER_SIZE",34661:"BUFFER_USAGE",34816:"STENCIL_BACK_FUNC",34817:"STENCIL_BACK_FAIL",34818:"STENCIL_BACK_PASS_DEPTH_FAIL",34819:"STENCIL_BACK_PASS_DEPTH_PASS",34877:"BLEND_EQUATION_ALPHA",34921:"MAX_VERTEX_ATTRIBS",34922:"VERTEX_ATTRIB_ARRAY_NORMALIZED",34930:"MAX_TEXTURE_IMAGE_UNITS",34962:"ARRAY_BUFFER",34963:"ELEMENT_ARRAY_BUFFER",34964:"ARRAY_BUFFER_BINDING",34965:"ELEMENT_ARRAY_BUFFER_BINDING",34975:"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",35040:"STREAM_DRAW",35044:"STATIC_DRAW",35048:"DYNAMIC_DRAW",35632:"FRAGMENT_SHADER",35633:"VERTEX_SHADER",35660:"MAX_VERTEX_TEXTURE_IMAGE_UNITS",35661:"MAX_COMBINED_TEXTURE_IMAGE_UNITS",35663:"SHADER_TYPE",35664:"FLOAT_VEC2",35665:"FLOAT_VEC3",35666:"FLOAT_VEC4",35667:"INT_VEC2",35668:"INT_VEC3",35669:"INT_VEC4",35670:"BOOL",35671:"BOOL_VEC2",35672:"BOOL_VEC3",35673:"BOOL_VEC4",35674:"FLOAT_MAT2",35675:"FLOAT_MAT3",35676:"FLOAT_MAT4",35678:"SAMPLER_2D",35680:"SAMPLER_CUBE",35712:"DELETE_STATUS",35713:"COMPILE_STATUS",35714:"LINK_STATUS",35715:"VALIDATE_STATUS",35716:"INFO_LOG_LENGTH",35717:"ATTACHED_SHADERS",35718:"ACTIVE_UNIFORMS",35719:"ACTIVE_UNIFORM_MAX_LENGTH",35720:"SHADER_SOURCE_LENGTH",35721:"ACTIVE_ATTRIBUTES",35722:"ACTIVE_ATTRIBUTE_MAX_LENGTH",35724:"SHADING_LANGUAGE_VERSION",35725:"CURRENT_PROGRAM",36003:"STENCIL_BACK_REF",36004:"STENCIL_BACK_VALUE_MASK",36005:"STENCIL_BACK_WRITEMASK",36006:"FRAMEBUFFER_BINDING",36007:"RENDERBUFFER_BINDING",36048:"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",36049:"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",36050:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",36051:"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",36053:"FRAMEBUFFER_COMPLETE",36054:"FRAMEBUFFER_INCOMPLETE_ATTACHMENT",36055:"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",36057:"FRAMEBUFFER_INCOMPLETE_DIMENSIONS",36061:"FRAMEBUFFER_UNSUPPORTED",36064:"COLOR_ATTACHMENT0",36096:"DEPTH_ATTACHMENT",36128:"STENCIL_ATTACHMENT",36160:"FRAMEBUFFER",36161:"RENDERBUFFER",36162:"RENDERBUFFER_WIDTH",36163:"RENDERBUFFER_HEIGHT",36164:"RENDERBUFFER_INTERNAL_FORMAT",36168:"STENCIL_INDEX8",36176:"RENDERBUFFER_RED_SIZE",36177:"RENDERBUFFER_GREEN_SIZE",36178:"RENDERBUFFER_BLUE_SIZE",36179:"RENDERBUFFER_ALPHA_SIZE",36180:"RENDERBUFFER_DEPTH_SIZE",36181:"RENDERBUFFER_STENCIL_SIZE",36194:"RGB565",36336:"LOW_FLOAT",36337:"MEDIUM_FLOAT",36338:"HIGH_FLOAT",36339:"LOW_INT",36340:"MEDIUM_INT",36341:"HIGH_INT",36346:"SHADER_COMPILER",36347:"MAX_VERTEX_UNIFORM_VECTORS",36348:"MAX_VARYING_VECTORS",36349:"MAX_FRAGMENT_UNIFORM_VECTORS",37440:"UNPACK_FLIP_Y_WEBGL",37441:"UNPACK_PREMULTIPLY_ALPHA_WEBGL",37442:"CONTEXT_LOST_WEBGL",37443:"UNPACK_COLORSPACE_CONVERSION_WEBGL",37444:"BROWSER_DEFAULT_WEBGL"};var P={alpha:!1,depth:!0,premultipliedAlpha:!1};let F=0;function m(){let t,e,i=[0,0,0,0],E=0;const _=A(),r=A(),n=A(),a=o(),T=A(),N=o();this.id="WebGLContext"+F++,this.canvas,this.gl,this.width=0,this.height=0,this.webgl2=S(),this.isMobile=C,this.CONTEXT_LOST="contextLost",this.CONTEXT_RESTORED="contextRestored",this.shaderCount=0,this.bufferCount=0,this.init=function(t,e={}){const i=s({},P,e);if(void 0!==t){if(t instanceof HTMLCanvasElement){this.canvas=t;let E=this.webgl2?"webgl2":"webgl1";e.webgl1&&(E="webgl1",this.webgl2=!1),this.gl=t.getContext(E,i)}else t instanceof WebGL2RenderingContext?(this.webgl2=!0,this.gl=t,this.canvas=t.canvas):t instanceof WebGLRenderingContext?(this.webgl2=!1,this.gl=t,this.canvas=t.canvas):console.error("The source has to be one of the following : Canvas, WebGLRenderingContext or WebGL2RenderingContext");this.canvas.addEventListener("webglcontextlost",m),this.canvas.addEventListener("webglcontextrestored",D),this.extensions=(t=>{const e=t instanceof WebGL2RenderingContext,i={};return(e?O:f).forEach((e=>{i[e]=t.getExtension(e)})),e||(i.OES_vertex_array_object||console.error("OES_vertex_array_object extension is not supported"),L(t,"OES_vertex_array_object"),L(t,"ANGLE_instanced_arrays"),L(t,"WEBGL_draw_buffers")),i})(this.gl),(t=>{for(const e in U)t[e]?console.log("already exist : ",e):t[e]=U[e];if(t.webgl2){const e=/^[^a-z]*$/;for(const i in t.gl)e.test(i)&&-1===i.indexOf("FLOAT")&&(t[i]=t.gl[i],U[i]=t.gl[i],d[t[i]]=i)}})(this),this.setSize(this.canvas.width,this.canvas.height),this.enable(this.BLEND),this.enableAlphaBlending(),this.enable(this.DEPTH_TEST),this.enable(this.CULL_FACE),this.cullFace(B.BACK)}else{const t=document.createElement("canvas");this.init(t,i)}},this.clear=function(t=0,e=0,i=0,E=0){const{gl:_}=this;_.clearColor(t,e,i,E),_.clear(_.COLOR_BUFFER_BIT|_.DEPTH_BUFFER_BIT)},this.setSize=function(t,e){this.width=Math.floor(t),this.height=Math.floor(e),this.canvas.width=this.width,this.canvas.height=this.height,E=this.width/this.height,this.viewport(0,0,this.width,this.height)},this.viewport=function(t,e,E,_){M(i,[t,e,E,_])||(i=[t,e,E,_],this.gl.viewport(t,e,E,_))},this.getViewport=function(){return i},this.getAspectRatio=function(){return E},this.enable=function(t){this.gl.enable(t)},this.disable=function(t){this.gl.disable(t)},this.cullFace=function(t){this.gl.cullFace(t)},this.enableAlphaBlending=function(){const{gl:t}=this;t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA)},this.enableAdditiveBlending=function(){const{gl:t}=this;t.blendFunc(t.ONE,t.ONE)},this.setMatrices=function(t){e=t,this.setModelMatrix(r)},this.setModelMatrix=function(t){var i,E,r,s,o,A,l,S,L,f,O,C,M,U,d,P,F,m,B,D,g,p,b;c(n,t),void 0!==e&&(i=_,E=e.viewMatrix,r=n,s=E[0],o=E[1],A=E[2],l=E[3],S=E[4],L=E[5],f=E[6],O=E[7],C=E[8],M=E[9],U=E[10],d=E[11],P=E[12],F=E[13],m=E[14],B=E[15],D=r[0],g=r[1],p=r[2],b=r[3],i[0]=D*s+g*S+p*C+b*P,i[1]=D*o+g*L+p*M+b*F,i[2]=D*A+g*f+p*U+b*m,i[3]=D*l+g*O+p*d+b*B,D=r[4],g=r[5],p=r[6],b=r[7],i[4]=D*s+g*S+p*C+b*P,i[5]=D*o+g*L+p*M+b*F,i[6]=D*A+g*f+p*U+b*m,i[7]=D*l+g*O+p*d+b*B,D=r[8],g=r[9],p=r[10],b=r[11],i[8]=D*s+g*S+p*C+b*P,i[9]=D*o+g*L+p*M+b*F,i[10]=D*A+g*f+p*U+b*m,i[11]=D*l+g*O+p*d+b*B,D=r[12],g=r[13],p=r[14],b=r[15],i[12]=D*s+g*S+p*C+b*P,i[13]=D*o+g*L+p*M+b*F,i[14]=D*A+g*f+p*U+b*m,i[15]=D*l+g*O+p*d+b*B,h(a,_),u(a,a),R(a,a),h(N,_),u(N,N),I(T,e.viewMatrix))},this.useShader=function(e){t=e,this.shaderProgram=e.shaderProgram,this.gl.useProgram(this.shaderProgram)},this.draw=function(e){if(e.length)return void e.forEach((t=>this.draw(t)));l(),t.updateUniforms(),e.bind(this);const{drawType:i}=e,{gl:E}=this;e.isInstanced?E.drawElementsInstanced(e.drawType,e.numItems,E.UNSIGNED_SHORT,0,e.numInstance):i===E.POINTS?E.drawArrays(i,0,e.vertexSize):E.drawElements(i,e.numItems,E.UNSIGNED_SHORT,0),e.unbind()},this.getCamera=function(){return e},this.destroy=function(t=!0){this.gl.getExtension("WEBGL_lose_context").loseContext(),t&&void 0!==this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas)};const l=()=>{void 0!==e&&(t.uniform("uProjectionMatrix","mat4",e.projectionMatrix),t.uniform("uViewMatrix","mat4",e.viewMatrix),t.uniform("uNormalMatrix","mat3",a),t.uniform("uModelViewMatrixInverse","mat3",N)),t.uniform("uModelMatrix","mat4",n)},m=()=>{this.emit(this.CONTEXT_LOST)},D=()=>{this.emit(this.CONTEXT_RESTORED)}}m.prototype=Object.assign(Object.create(e.prototype),{constructor:m});const B=new m,D={float:"uniform1f",vec2:"uniform2fv",vec3:"uniform3fv",vec4:"uniform4fv",int:"uniform1i",ivec2:"uniform2i",ivec3:"uniform3i",ivec4:"uniform4i",mat2:"uniformMatrix2fv",mat3:"uniformMatrix3fv",mat4:"uniformMatrix4fv"},g=t=>"number"==typeof t?t:t.slice?t.slice(0):new Float32Array(t),p=t=>"object"==typeof t?function(t){return 9===t.length?"mat3":16===t.length?"mat4":"vec"+t.length}(t):"float";function b(t,e){let i;this.vertexShader=t||"\n#define SHADER_NAME BASIC_VERTEX\nprecision highp float;attribute vec3 aVertexPosition;attribute vec2 aTextureCoord;void main(void){gl_Position=vec4(aVertexPosition,1.0);}",this.fragmentShader=e||"precision highp float;void main(void){gl_FragColor=vec4(1.0);}",this.shaderProgram;let E={};this.bind=function(t){if(void 0===t||void 0===i||t===i){if(i=t||B,!this.shaderProgram){const t=_(this.vertexShader,!0),e=_(this.fragmentShader,!1);r(t,e)}i.useShader(this)}else console.error("this shader has been bind to a different WebGL Rendering Context",i.id)},this.uniform=function(t,e,i){let _,r;void 0===i?(r=p(e),_=e):(r=e,_=i);const s=D[r];if(E[t]){const e=E[t];M(e.value,_)||(e.value=g(_),e.changed=!0)}else E[t]={type:r,uniformType:s,value:g(_),changed:!0}},this.updateUniforms=function(){if(!i)return void console.warn("No WebGL Context has been set yet, please call shader.bind() first");const{gl:t}=i;for(let e in E){const i=E[e];if(i.changed){const E=e;i.uniformLoc||(i.uniformLoc=t.getUniformLocation(this.shaderProgram,E));const{uniformLoc:_,uniformType:r,value:s}=i;null!==_&&(-1===r.indexOf("Matrix")?t[r](_,s):t[r](_,!1,s)),i.changed=!1}}},this.destroy=function(){const{gl:t}=i;t.deleteProgram(this.shaderProgram),i.shaderCount--};const _=(t,e)=>{const{gl:E}=i,_=e?i.VERTEX_SHADER:i.FRAGMENT_SHADER,r=E.createShader(_);return E.shaderSource(r,t),E.compileShader(r),E.getShaderParameter(r,E.COMPILE_STATUS)?r:(console.warn("Error in Shader : ",E.getShaderInfoLog(r)),console.log((t=>{const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=`${t+1}: ${e[t]}`;return e.join("\n")})(t)),null)},r=(t,e)=>{const{gl:E}=i;this.shaderProgram=E.createProgram(),E.attachShader(this.shaderProgram,t),E.attachShader(this.shaderProgram,e),E.deleteShader(t),E.deleteShader(e),E.linkProgram(this.shaderProgram),i.shaderCount++}}function V(t=U.TRIANGLES){this.drawType=t,this.isInstanced=!1,this.numItems=0;let e,i,E,_,r,s=[],n=[],a=!0;this.bufferData=function(t,e,i,E=U.STATIC_DRAW,_=!1){let r,s=[];if("number"==typeof t[0]){if(r=t,void 0===i)return console.error("Missing element size for flatten data :",e),this;for(let t=0;t<r.length;t+=i){const e=[];for(let E=0;E<i;E++)e.push(r[t+E]);s.push(e)}}else s=t,r=(t=>{if(t[0]instanceof Float32Array)return t.reduce(((t,e)=>{for(let i=0;i<e.length;i++)t.push(e[i]);return t}),[]);return t.flat()})(t);const n=void 0===i?t[0].length:i;return T(r,t,e,n,E,_)},this.bufferVertex=function(t,e=U.STATIC_DRAW){return this.bufferData(t,"aVertexPosition",3,e)},this.bufferTexCoord=function(t,e=U.STATIC_DRAW){return this.bufferData(t,"aTextureCoord",2,e)},this.bufferNormal=function(t,e=U.STATIC_DRAW){return this.bufferData(t,"aNormal",3,e)},this.bufferIndex=function(t,e=U.STATIC_DRAW){return i=e,E=new Uint16Array(t),this.numItems=E.length,a=!0,this},this.bind=function(t){if(void 0!==t&&void 0!==r&&t!==r)return void console.error("this mesh has been bind to a different WebGL Rendering Context");r=t||GL;const{gl:i}=r;o(),i.bindVertexArray(e),this.vertexSize=this.getSource("aVertexPosition").length},this.unbind=function(){},this.getAttribute=function(t){return s.find((e=>e.name===t))},this.getAttributes=function(){return s},this.getSource=function(t){const e=this.getAttribute(t);return e?e.source:[]},this.destroy=function(){const{gl:t}=r;s.forEach((e=>{t.deleteBuffer(e.buffer),e.source=[],e.dataArray=[],r.bufferCount--})),_&&(t.deleteBuffer(_),r.bufferCount--),t.deleteVertexArray(e),s=[],E=[],n=[]};const T=(t,e,i,E,_=U.STATIC_DRAW,r=!1)=>{const a=_;this.isInstanced=r||this.isInstanced;const T=new Float32Array(t),o=this.getAttribute(i);return o?(o.itemSize=E,o.dataArray=T,o.source=e):s.push({name:i,source:e,itemSize:E,usage:a,dataArray:T,isInstanced:r}),n.push(i),this},o=()=>{const{shaderProgram:t,gl:i}=r;0!=n.length&&(e||(e=i.createVertexArray()),i.bindVertexArray(e),s.forEach((e=>{if(-1!==n.indexOf(e.name)){const E=function(t,e){let i;const{gl:E}=e;return void 0!==t.buffer?i=t.buffer:(i=E.createBuffer(),t.buffer=i,e.bufferCount++),i}(e,r);i.bindBuffer(i.ARRAY_BUFFER,E),i.bufferData(i.ARRAY_BUFFER,e.dataArray,e.usage);const _=((t,e,i)=>(void 0===e.cacheAttribLoc&&(e.cacheAttribLoc={}),void 0===e.cacheAttribLoc[i]&&(e.cacheAttribLoc[i]=t.getAttribLocation(e,i)),e.cacheAttribLoc[i]))(i,t,e.name);_>=0&&(i.enableVertexAttribArray(_),i.vertexAttribPointer(_,e.itemSize,i.FLOAT,!1,0,0)),e.attrPosition=_,e.isInstanced&&i.vertexAttribDivisor(_,1)}})),h(),i.bindVertexArray(null),a=!1,n=[])},h=()=>{const{gl:t}=r;a&&(_||(_=t.createBuffer(),r.bufferCount++),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,_),t.bufferData(t.ELEMENT_ARRAY_BUFFER,E,i))}}class v{constructor(){this._mtxView=A(),this._mtxProj=A(),this._near=0,this._far=0,this._lookDir=N()}lookAt(t,e,i=[0,1,0]){var E,_,r,s,a,T,o,h,R,u,A,c,I,N,l,S,L,f,O,C,M,U,d;E=this._mtxView,r=e,s=i,l=(_=t)[0],S=_[1],L=_[2],f=s[0],O=s[1],C=s[2],M=r[0],U=r[1],d=r[2],Math.abs(l-M)<n&&Math.abs(S-U)<n&&Math.abs(L-d)<n?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(E):(A=l-M,c=S-U,I=L-d,a=O*(I*=N=1/Math.hypot(A,c,I))-C*(c*=N),T=C*(A*=N)-f*I,o=f*c-O*A,(N=Math.hypot(a,T,o))?(a*=N=1/N,T*=N,o*=N):(a=0,T=0,o=0),h=c*o-I*T,R=I*a-A*o,u=A*T-c*a,(N=Math.hypot(h,R,u))?(h*=N=1/N,R*=N,u*=N):(h=0,R=0,u=0),E[0]=a,E[1]=h,E[2]=A,E[3]=0,E[4]=T,E[5]=R,E[6]=c,E[7]=0,E[8]=o,E[9]=u,E[10]=I,E[11]=0,E[12]=-(a*l+T*S+o*L),E[13]=-(h*l+R*S+u*L),E[14]=-(A*l+c*S+I*L),E[15]=1)}setFromViewProjection(t,e){c(this._mtxView,t),c(this._mtxProj,e)}setViewMatrix(t){c(this._mtxView,t)}setProjectionMatrix(t){c(this._mtxProj,t)}_updateMatrices(){}get viewMatrix(){return this._mtxView}get view(){return this._mtxView}get projectionMatrix(){return this._mtxProj}get projection(){return this._mtxProj}get position(){const t=A();return I(t,this._mtxView),[t[12],t[13],t[14]]}get direction(){const t=o();var e,i,E,_,r,s;return h(t,this._mtxView),R(t,t),e=this._lookDir,E=t,_=(i=[0,0,-1])[0],r=i[1],s=i[2],e[0]=_*E[0]+r*E[3]+s*E[6],e[1]=_*E[1]+r*E[4]+s*E[7],e[2]=_*E[2]+r*E[5]+s*E[8],function(t,e){var i=e[0],E=e[1],_=e[2],r=i*i+E*E+_*_;r>0&&(r=1/Math.sqrt(r)),t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r}(this._lookDir,this._lookDir),this._lookDir}set near(t){this._near=t,this._updateMatrices()}get near(){return this._near}set far(t){this._far=t,this._updateMatrices()}get far(){return this._far}}class x{constructor(t){return this._GL=t||B,this._uniforms={},this._uniformTextures=[],this._fbo,this._clearColor={r:0,g:0,b:0,a:0},this}setClearColor(t=0,e=0,i=0,E=0){return this._clearColor.r=t,this._clearColor.g=e,this._clearColor.b=i,this._clearColor.a=E,this}useProgram(t,e){return this._shader=t instanceof b?t:new b(t,e),this}setMesh(t){return this._mesh=t,this}createMesh(t){return this._mesh=new V(t),this}bufferVertex(t){return this._mesh||(this._mesh=new V),this._mesh.bufferVertex(t),this}bufferTexCoord(t){return this._mesh||(this._mesh=new V),this._mesh.bufferTexCoord(t),this}bufferNormal(t){return this._mesh||(this._mesh=new V),this._mesh.bufferNormal(t),this}bufferIndex(t){return this._mesh||(this._mesh=new V),this._mesh.bufferIndex(t),this}bufferInstance(t,e){return this._mesh?(this._mesh.bufferInstance(t,e),this):(console.warn("Need to create mesh first"),this)}bufferData(t,e){return this._mesh||(this._mesh=new V),this._mesh.bufferData(t,e),this}uniform(t,e,i){const E=t;let _,r;return void 0===i?(r=p(e),_=e):(r=e,_=i),this._uniforms[E]={type:r,value:_},this}uniformTexture(t,e,i){return this.bindTexture(t,e,i)}bindTexture(t,e,i){return void 0!==i?this._uniformTextures[i]={name:t,texture:e}:this._uniformTextures.push({name:t,texture:e}),this}bindFramebuffer(t){return this._fbo=t,this}draw(){if(this._shader&&this._mesh){if(this._fbo){const{r:t,g:e,b:i,a:E}=this._clearColor;this._fbo.bind(),this._GL.clear(t,e,i,E)}this._shader.bind(this._GL);for(const t in this._uniforms){const e=this._uniforms[t];this._shader.uniform(t,e.type,e.value)}return this._uniformTextures.forEach(((t,e)=>{void 0!==t&&(this._shader.uniform(t.name,"uniform1i",e),t.texture.bind(e))})),this._GL.draw(this._mesh),this._fbo&&this._fbo.unbind(),this}}get shader(){return this._shader}get framebuffer(){return this._fbo}}var X="precision highp float;uniform vec3 uColor;uniform float uOpacity;void main(void){gl_FragColor=vec4(uColor,uOpacity);}";const G=new class{constructor(){this._delayTasks=[],this._nextTasks=[],this._deferTasks=[],this._highTasks=[],this._usurpTask=[],this._enterframeTasks=[],this._idTable=0,this._startTime=(new Date).getTime(),this._deltaTime=0,this._internalTime=0,this._isPaused=!1,this._loop()}addEF(t,e){e=e||[];const i=this._idTable;return this._enterframeTasks[i]={func:t,params:e},this._idTable++,i}removeEF(t){return void 0!==this._enterframeTasks[t]&&(this._enterframeTasks[t]=null),-1}delay(t,e,i){const E={func:t,params:e,delay:i,time:(new Date).getTime()};this._delayTasks.push(E)}defer(t,e){const i={func:t,params:e};this._deferTasks.push(i)}next(t,e){const i={func:t,params:e};this._nextTasks.push(i)}usurp(t,e){const i={func:t,params:e};this._usurpTask.push(i)}pause(){this._isPaused=!0}advance(){this._internalTime+=1/60}resume(){this._isPaused=!1}_process(){let t,e,i,E=0;for(E=0;E<this._enterframeTasks.length;E++)t=this._enterframeTasks[E],null!=t&&t.func(t.params);for(;this._highTasks.length>0;)t=this._highTasks.pop(),t.func(t.params);let _=(new Date).getTime(),r=this._deltaTime;for(this._deltaTime=(_-this._startTime)/1e3,E=0;E<this._delayTasks.length;E++)t=this._delayTasks[E],_-t.time>t.delay&&(t.func(t.params),this._delayTasks.splice(E,1));for(_=(new Date).getTime(),this._deltaTime=(_-this._startTime)/1e3,e=1e3/60;this._deferTasks.length>0;){if(t=this._deferTasks.shift(),i=(new Date).getTime(),!(i-_<e)){this._deferTasks.unshift(t);break}t.func(t.params)}for(_=(new Date).getTime(),this._deltaTime=(_-this._startTime)/1e3,e=1e3/60;this._usurpTask.length>0;)t=this._usurpTask.shift(),i=(new Date).getTime(),i-_<e&&t.func(t.params);this._highTasks=this._highTasks.concat(this._nextTasks),this._nextTasks=[],this._usurpTask=[],this._isPaused||(this._internalTime+=this._deltaTime-r)}_loop(){this._process(),window.requestAnimationFrame((()=>this._loop()))}get intervalTime(){return this._internalTime}get deltaTime(){return this._deltaTime}};const H={Linear:{None:t=>t},Quadratic:{In:t=>t*t,Out:t=>t*(2-t),InOut:t=>(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)},Cubic:{In:t=>t*t*t,Out:t=>--t*t*t+1,InOut:t=>(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},Quartic:{In:t=>t*t*t*t,Out:t=>1- --t*t*t*t,InOut:t=>(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},Quintic:{In:t=>t*t*t*t*t,Out:t=>--t*t*t*t*t+1,InOut:t=>(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},Sinusoidal:{In:t=>1-Math.cos(t*Math.PI/2),Out:t=>Math.sin(t*Math.PI/2),InOut:t=>.5*(1-Math.cos(Math.PI*t))},Exponential:{In:t=>0===t?0:Math.pow(1024,t-1),Out:t=>1===t?1:1-Math.pow(2,-10*t),InOut:t=>0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)))},Circular:{In:t=>1-Math.sqrt(1-t*t),Out:t=>Math.sqrt(1- --t*t),InOut:t=>(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},Elastic:{In(t){let e,i=.1;return 0===t?0:1===t?1:(!i||i<1?(i=1,e=.1):e=.4*Math.asin(1/i)/(2*Math.PI),-i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4))},Out(t){let e,i=.1;return 0===t?0:1===t?1:(!i||i<1?(i=1,e=.1):e=.4*Math.asin(1/i)/(2*Math.PI),i*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/.4)+1)},InOut(t){let e,i=.1;const E=.4;return 0===t?0:1===t?1:(!i||i<1?(i=1,e=.1):e=E*Math.asin(1/i)/(2*Math.PI),(t*=2)<1?i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/E)*-.5:i*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/E)*.5+1)}},Back:{In(t){const e=1.70158;return t*t*((e+1)*t-e)},Out(t){const e=1.70158;return--t*t*((e+1)*t+e)+1},InOut(t){const e=2.5949095;return(t*=2)<1?t*t*((e+1)*t-e)*.5:.5*((t-=2)*t*((e+1)*t+e)+2)}},Bounce:{in:t=>1-H.Bounce.out(1-t),out:t=>t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,inOut:t=>t<.5?.5*H.Bounce.in(2*t):.5*H.Bounce.out(2*t-1)+.5}};Array.prototype.flat||Object.defineProperty(Array.prototype,"flat",{configurable:!0,value:function t(){var e=isNaN(arguments[0])?1:Number(arguments[0]);return e?Array.prototype.reduce.call(this,(function(i,E){return Array.isArray(E)?i.push.apply(i,t.call(E,e-1)):i.push(E),i}),[]):Array.prototype.slice.call(this)},writable:!0}),t.Camera=v,t.CameraOrtho=class extends v{constructor(t,e,i,E,_=.1,r=100){super(),this._left=0,this._right=0,this._top=0,this._bottom=0,this.ortho(t,e,i,E,_,r)}ortho(t,e,i,E,_=.1,r=100){this.left=t,this.right=e,this.top=i,this.bottom=E,function(t,e,i,E,_,r,s){var n=1/(e-i),a=1/(E-_),T=1/(r-s);t[0]=-2*n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*T,t[11]=0,t[12]=(e+i)*n,t[13]=(_+E)*a,t[14]=(s+r)*T,t[15]=1}(this._mtxProj,t,e,E,i,_,r),this._left=t,this._right=e,this._top=i,this._bottom=E,this._near=_,this._far=r}_updateMatrices(){this.ortho(this._left,this._right,this._top,this._bottom,this._near,this._far)}},t.CameraPerspective=class extends v{constructor(t,e,i,E){super(),this._fov=0,this._ratio=0,this.setPerspective(t,e,i,E)}setPerspective(t,e,i,E){var _,r,s,n,a,T,o;_=this._mtxProj,r=t,s=e,n=i,a=E,o=1/Math.tan(r/2),_[0]=o/s,_[1]=0,_[2]=0,_[3]=0,_[4]=0,_[5]=o,_[6]=0,_[7]=0,_[8]=0,_[9]=0,_[11]=-1,_[12]=0,_[13]=0,_[15]=0,null!=a&&a!==1/0?(T=1/(n-a),_[10]=(a+n)*T,_[14]=2*a*n*T):(_[10]=-1,_[14]=-2*n),this._near=i,this._far=E,this._fov=t,this._ratio=e}_updateMatrices(){this.setPerspective(this._fov,this._ratio,this._near,this._far)}},t.Draw=x,t.DrawAxis=class extends x{constructor(t){super(t);const e=this._GL,i=1e3,E=[[-i,0,0],[i,0,0],[0,-i,0],[0,i,0],[0,0,-i],[0,0,i]];this.createMesh(e.LINES).bufferVertex(E).bufferData([[1,0,0],[1,0,0],[0,1,0],[0,1,0],[0,0,1],[0,0,1]],"aColor").bufferIndex([0,1,2,3,4,5]).useProgram("precision highp float;attribute vec3 aVertexPosition;attribute vec3 aColor;uniform mat4 uModelMatrix;uniform mat4 uViewMatrix;uniform mat4 uProjectionMatrix;varying vec3 vColor;void main(void){gl_Position=uProjectionMatrix*uViewMatrix*uModelMatrix*vec4(aVertexPosition,1.0);vColor=aColor;}","precision highp float;varying vec3 vColor;uniform float uOpacity;void main(void){gl_FragColor=vec4(vColor,uOpacity);}"),this.opacity=.75}draw(){this.uniform("uOpacity",this.opacity),super.draw()}},t.DrawDotsPlane=class extends x{constructor(t){super(t);const e=this._GL,i=[],E=[];let _=0;const r=100;let s,n;for(s=-100;s<r;s+=1)for(n=-100;n<r;n+=1)i.push([s,n,0]),E.push(_),_++,i.push([s,0,n]),E.push(_),_++;this.createMesh(e.POINTS).bufferVertex(i).bufferIndex(E).useProgram("#define SHADER_NAME DOTS_PLANE_VERTEX\nprecision highp float;attribute vec3 aVertexPosition;uniform mat4 uModelMatrix;uniform mat4 uViewMatrix;uniform mat4 uProjectionMatrix;uniform vec2 uViewport;uniform float uScale;uniform float uPointScale;const float radius=0.008;void main(void){gl_Position=uProjectionMatrix*uViewMatrix*uModelMatrix*vec4(aVertexPosition*uScale,1.0);float distOffset=uViewport.y*uProjectionMatrix[1][1]*radius/gl_Position.w;gl_PointSize=distOffset*uPointScale;}",X),this.color=[1,1,1],this.opacity=.5,this.pointScale=1,this.scale=1}draw(){const{width:t,height:e}=this._GL;this.uniform("uColor",this.color).uniform("uOpacity",this.opacity).uniform("uScale",this.scale).uniform("uPointScale",this.pointScale).uniform("uViewport",[t,e]),super.draw()}},t.DrawLine=class extends x{constructor(t){super(t);const e=this._GL;this.createMesh(e.LINES).bufferVertex([[0,0,0],[1,0,0]]).bufferIndex([0,1]).useProgram("precision highp float;attribute vec3 aVertexPosition;uniform mat4 uModelMatrix;uniform mat4 uViewMatrix;uniform mat4 uProjectionMatrix;uniform vec3 uPosA;uniform vec3 uPosB;void main(void){vec3 pos=mix(uPosA,uPosB,aVertexPosition.x);gl_Position=uProjectionMatrix*uViewMatrix*uModelMatrix*vec4(pos,1.0);}",X),this.color=[1,1,1],this.opacity=.75}draw(t,e,i,E){this.uniform("uPosA",t).uniform("uPosB",e).uniform("uOpacity",E||this.opacity).uniform("uColor",i||this.color),super.draw()}},t.EaseNumber=class{constructor(t,e=.1){this.easing=e,this._value=t,this._targetValue=t,this._efIndex=G.addEF((()=>this._update()))}_update(){this._checkLimit(),this._value+=(this._targetValue-this._value)*this.easing,Math.abs(this._targetValue-this._value)<1e-4&&(this._value=this._targetValue)}setTo(t){this._targetValue=this._value=t}add(t){this._targetValue+=t}limit(t,e){t>e?this.limit(e,t):(this._min=t,this._max=e,this._checkLimit())}_checkLimit(){void 0!==this._min&&this._targetValue<this._min&&(this._targetValue=this._min),void 0!==this._max&&this._targetValue>this._max&&(this._targetValue=this._max)}destroy(){G.removeEF(this._efIndex)}set value(t){this._targetValue=t}get value(){return this._value}get targetValue(){return this._targetValue}},t.GL=B,t.GLShader=b,t.GLTool=m,t.Mesh=V,t.SpringNumber=class{constructor(t,e=.1,i=.9){this._value=t,this._targetValue=t,this.speed=e,this.decreaseRate=i,this._velocity=0,this._efIndex=G.addEF((()=>this._update()))}_update(){const t=1e-4;this._checkLimit(),Math.abs(this._targetValue-this._value)<t?this._value=this._targetValue:(this._velocity+=(this._targetValue-this._value)*this.speed,this._value+=this._velocity,this._velocity*=this.decreaseRate,Math.abs(this._targetValue-this._value)<t&&(this._value=this._targetValue))}limit(t,e){t>e?this.limit(e,t):(this._min=t,this._max=e,this._checkLimit())}_checkLimit(){void 0!==this._min&&this._targetValue<this._min&&(this._targetValue=this._min),void 0!==this._max&&this._targetValue>this._max&&(this._targetValue=this._max)}destroy(){G.removeEF(this._efIndex)}set value(t){this._targetValue=t}get value(){return this._value}},t.TweenNumber=class{constructor(t,e="expOut",i=.01){this._value=t,this._startValue=t,this._targetValue=t,this._counter=1,this.speed=i,this.easing=e,this._needUpdate=!0,this._efIndex=G.addEF((()=>this._update()))}_update(){let t=this._counter+this.speed;t>1&&(t=1),this._counter!==t?(this._counter=t,this._needUpdate=!0):this._needUpdate=!1}limit(t,e){t>e?this.limit(e,t):(this._min=t,this._max=e,this._checkLimit())}setTo(t){this._value=t,this._targetValue=t,this._counter=1}_checkLimit(){void 0!==this._min&&this._targetValue<this._min&&(this._targetValue=this._min),void 0!==this._max&&this._targetValue>this._max&&(this._targetValue=this._max)}destroy(){G.removeEF(this._efIndex)}set value(t){this._startValue=this._value,this._targetValue=t,this._checkLimit(),this._counter=0}get value(){if(this._needUpdate){const t=function(t){switch(t){default:case"linear":return H.Linear.None;case"expIn":return H.Exponential.In;case"expOut":return H.Exponential.Out;case"expInOut":return H.Exponential.InOut;case"cubicIn":return H.Cubic.In;case"cubicOut":return H.Cubic.Out;case"cubicInOut":return H.Cubic.InOut;case"quarticIn":return H.Quartic.In;case"quarticOut":return H.Quartic.Out;case"quarticInOut":return H.Quartic.InOut;case"quinticIn":return H.Quintic.In;case"quinticOut":return H.Quintic.Out;case"quinticInOut":return H.Quintic.InOut;case"sinusoidalIn":return H.Sinusoidal.In;case"sinusoidalOut":return H.Sinusoidal.Out;case"sinusoidalInOut":return H.Sinusoidal.InOut;case"circularIn":return H.Circular.In;case"circularOut":return H.Circular.Out;case"circularInOut":return H.Circular.InOut;case"elasticIn":return H.Elastic.In;case"elasticOut":return H.Elastic.Out;case"elasticInOut":return H.Elastic.InOut;case"backIn":return H.Back.In;case"backOut":return H.Back.Out;case"backInOut":return H.Back.InOut;case"bounceIn":return H.Bounce.in;case"bounceOut":return H.Bounce.out;case"bounceInOut":return H.Bounce.inOut}}(this.easing)(this._counter);this._value=this._startValue+t*(this._targetValue-this._startValue),this._needUpdate=!1}return this._value}get targetValue(){return this._targetValue}},t.checkWebGL2=S,t.getWebGLContext=(t,e,i=!1)=>i?t.getContext("webgl2",e)||t.getContext("experimental-webgl2",e):t.getContext("webgl",e)||t.getContext("experimental-webgl",e),Object.defineProperty(t,"__esModule",{value:!0})}));
