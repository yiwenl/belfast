import E from"events";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var _=Object.getOwnPropertySymbols,T=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;function A(E){if(null==E)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(E)}var t=function(){try{if(!Object.assign)return!1;var E=new String("abc");if(E[5]="de","5"===Object.getOwnPropertyNames(E)[0])return!1;for(var _={},T=0;T<10;T++)_["_"+String.fromCharCode(T)]=T;if("0123456789"!==Object.getOwnPropertyNames(_).map((function(E){return _[E]})).join(""))return!1;var R={};return"abcdefghijklmnopqrst".split("").forEach((function(E){R[E]=E})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},R)).join("")}catch(E){return!1}}()?Object.assign:function(E,t){for(var e,N,I=A(E),S=1;S<arguments.length;S++){for(var r in e=Object(arguments[S]))T.call(e,r)&&(I[r]=e[r]);if(_){N=_(e);for(var i=0;i<N.length;i++)R.call(e,N[i])&&(I[N[i]]=e[N[i]])}}return I};const e=()=>{const E=document.createElement("canvas");return!!(E.getContext("experimental-webgl2")||E.getContext("webgl2"))};function N(E,_){const T=E.getExtension(_);if(!T)return!1;const R=_.split("_")[0],A=new RegExp(R+"$");for(const _ in T){if("function"==typeof T[_]){const R=_.replace(A,"");_.substring&&(E[R]=T[_].bind(T))}}return!0}const I=["EXT_shader_texture_lod","EXT_sRGB","EXT_frag_depth","OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","WEBGL_depth_texture","EXT_texture_filter_anisotropic","OES_vertex_array_object","ANGLE_instanced_arrays","WEBGL_draw_buffers"],S=["EXT_color_buffer_float"],r=(()=>{let E=!1;return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(E=!0),E})();var i={ACTIVE_ATTRIBUTES:35721,ACTIVE_ATTRIBUTE_MAX_LENGTH:35722,ACTIVE_TEXTURE:34016,ACTIVE_UNIFORMS:35718,ACTIVE_UNIFORM_MAX_LENGTH:35719,ALIASED_LINE_WIDTH_RANGE:33902,ALIASED_POINT_SIZE_RANGE:33901,ALPHA:6406,ALPHA_BITS:3413,ALWAYS:519,ARRAY_BUFFER:34962,ARRAY_BUFFER_BINDING:34964,ATTACHED_SHADERS:35717,BACK:1029,BLEND:3042,BLEND_COLOR:32773,BLEND_DST_ALPHA:32970,BLEND_DST_RGB:32968,BLEND_EQUATION:32777,BLEND_EQUATION_ALPHA:34877,BLEND_EQUATION_RGB:32777,BLEND_SRC_ALPHA:32971,BLEND_SRC_RGB:32969,BLUE_BITS:3412,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,BROWSER_DEFAULT_WEBGL:37444,BUFFER_SIZE:34660,BUFFER_USAGE:34661,BYTE:5120,CCW:2305,CLAMP_TO_EDGE:33071,COLOR_ATTACHMENT0:36064,COLOR_BUFFER_BIT:16384,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,COMPILE_STATUS:35713,COMPRESSED_TEXTURE_FORMATS:34467,CONSTANT_ALPHA:32771,CONSTANT_COLOR:32769,CONTEXT_LOST_WEBGL:37442,CULL_FACE:2884,CULL_FACE_MODE:2885,CURRENT_PROGRAM:35725,CURRENT_VERTEX_ATTRIB:34342,CW:2304,DECR:7683,DECR_WRAP:34056,DELETE_STATUS:35712,DEPTH_ATTACHMENT:36096,DEPTH_BITS:3414,DEPTH_BUFFER_BIT:256,DEPTH_CLEAR_VALUE:2931,DEPTH_COMPONENT:6402,RED:6403,DEPTH_COMPONENT16:33189,DEPTH_FUNC:2932,DEPTH_RANGE:2928,DEPTH_STENCIL:34041,DEPTH_STENCIL_ATTACHMENT:33306,DEPTH_TEST:2929,DEPTH_WRITEMASK:2930,DITHER:3024,DONT_CARE:4352,DST_ALPHA:772,DST_COLOR:774,DYNAMIC_DRAW:35048,ELEMENT_ARRAY_BUFFER:34963,ELEMENT_ARRAY_BUFFER_BINDING:34965,EQUAL:514,FASTEST:4353,FLOAT:5126,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FRAGMENT_SHADER:35632,FRAMEBUFFER:36160,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_BINDING:36006,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_UNSUPPORTED:36061,FRONT:1028,FRONT_AND_BACK:1032,FRONT_FACE:2886,FUNC_ADD:32774,FUNC_REVERSE_SUBTRACT:32779,FUNC_SUBTRACT:32778,GENERATE_MIPMAP_HINT:33170,GEQUAL:518,GREATER:516,GREEN_BITS:3411,HALF_FLOAT:36193,HIGH_FLOAT:36338,HIGH_INT:36341,INCR:7682,INCR_WRAP:34055,INFO_LOG_LENGTH:35716,INT:5124,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,INVALID_ENUM:1280,INVALID_FRAMEBUFFER_OPERATION:1286,INVALID_OPERATION:1282,INVALID_VALUE:1281,INVERT:5386,KEEP:7680,LEQUAL:515,LESS:513,LINEAR:9729,LINEAR_MIPMAP_LINEAR:9987,LINEAR_MIPMAP_NEAREST:9985,LINES:1,LINE_LOOP:2,LINE_STRIP:3,LINE_WIDTH:2849,LINK_STATUS:35714,LOW_FLOAT:36336,LOW_INT:36339,LUMINANCE:6409,LUMINANCE_ALPHA:6410,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_CUBE_MAP_TEXTURE_SIZE:34076,MAX_FRAGMENT_UNIFORM_VECTORS:36349,MAX_RENDERBUFFER_SIZE:34024,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_TEXTURE_SIZE:3379,MAX_VARYING_VECTORS:36348,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VIEWPORT_DIMS:3386,MEDIUM_FLOAT:36337,MEDIUM_INT:36340,MIRRORED_REPEAT:33648,NEAREST:9728,NEAREST_MIPMAP_LINEAR:9986,NEAREST_MIPMAP_NEAREST:9984,NEVER:512,NICEST:4354,NONE:0,NOTEQUAL:517,NO_ERROR:0,NUM_COMPRESSED_TEXTURE_FORMATS:34466,ONE:1,ONE_MINUS_CONSTANT_ALPHA:32772,ONE_MINUS_CONSTANT_COLOR:32770,ONE_MINUS_DST_ALPHA:773,ONE_MINUS_DST_COLOR:775,ONE_MINUS_SRC_ALPHA:771,ONE_MINUS_SRC_COLOR:769,OUT_OF_MEMORY:1285,PACK_ALIGNMENT:3333,POINTS:0,POLYGON_OFFSET_FACTOR:32824,POLYGON_OFFSET_FILL:32823,POLYGON_OFFSET_UNITS:10752,RED_BITS:3410,RENDERBUFFER:36161,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_BINDING:36007,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_STENCIL_SIZE:36181,RENDERBUFFER_WIDTH:36162,RENDERER:7937,REPEAT:10497,REPLACE:7681,RGB:6407,RGB5_A1:32855,RGB565:36194,RGBA:6408,RGBA4:32854,SAMPLER_2D:35678,SAMPLER_CUBE:35680,SAMPLES:32937,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_BUFFERS:32936,SAMPLE_COVERAGE:32928,SAMPLE_COVERAGE_INVERT:32939,SAMPLE_COVERAGE_VALUE:32938,SCISSOR_BOX:3088,SCISSOR_TEST:3089,SHADER_COMPILER:36346,SHADER_SOURCE_LENGTH:35720,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,SHORT:5122,SRC_ALPHA:770,SRC_ALPHA_SATURATE:776,SRC_COLOR:768,STATIC_DRAW:35044,STENCIL_ATTACHMENT:36128,STENCIL_BACK_FAIL:34817,STENCIL_BACK_FUNC:34816,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,STENCIL_BITS:3415,STENCIL_BUFFER_BIT:1024,STENCIL_CLEAR_VALUE:2961,STENCIL_FAIL:2964,STENCIL_FUNC:2962,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_TEST:2960,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STREAM_DRAW:35040,SUBPIXEL_BITS:3408,TEXTURE:5890,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,TEXTURE_2D:3553,TEXTURE_BINDING_2D:32873,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP:34067,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TRIANGLES:4,TRIANGLE_FAN:6,TRIANGLE_STRIP:5,UNPACK_ALIGNMENT:3317,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNSIGNED_BYTE:5121,UNSIGNED_INT:5125,UNSIGNED_SHORT:5123,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,VALIDATE_STATUS:35715,VENDOR:7936,VERSION:7938,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_SHADER:35633,VIEWPORT:2978,ZERO:0,R8:33321},n={0:"NONE",1:"ONE",2:"LINE_LOOP",3:"LINE_STRIP",4:"TRIANGLES",5:"TRIANGLE_STRIP",6:"TRIANGLE_FAN",256:"DEPTH_BUFFER_BIT",512:"NEVER",513:"LESS",514:"EQUAL",515:"LEQUAL",516:"GREATER",517:"NOTEQUAL",518:"GEQUAL",519:"ALWAYS",768:"SRC_COLOR",769:"ONE_MINUS_SRC_COLOR",770:"SRC_ALPHA",771:"ONE_MINUS_SRC_ALPHA",772:"DST_ALPHA",773:"ONE_MINUS_DST_ALPHA",774:"DST_COLOR",775:"ONE_MINUS_DST_COLOR",776:"SRC_ALPHA_SATURATE",1024:"STENCIL_BUFFER_BIT",1028:"FRONT",1029:"BACK",1032:"FRONT_AND_BACK",1280:"INVALID_ENUM",1281:"INVALID_VALUE",1282:"INVALID_OPERATION",1285:"OUT_OF_MEMORY",1286:"INVALID_FRAMEBUFFER_OPERATION",2304:"CW",2305:"CCW",2849:"LINE_WIDTH",2884:"CULL_FACE",2885:"CULL_FACE_MODE",2886:"FRONT_FACE",2928:"DEPTH_RANGE",2929:"DEPTH_TEST",2930:"DEPTH_WRITEMASK",2931:"DEPTH_CLEAR_VALUE",2932:"DEPTH_FUNC",2960:"STENCIL_TEST",2961:"STENCIL_CLEAR_VALUE",2962:"STENCIL_FUNC",2963:"STENCIL_VALUE_MASK",2964:"STENCIL_FAIL",2965:"STENCIL_PASS_DEPTH_FAIL",2966:"STENCIL_PASS_DEPTH_PASS",2967:"STENCIL_REF",2968:"STENCIL_WRITEMASK",2978:"VIEWPORT",3024:"DITHER",3042:"BLEND",3088:"SCISSOR_BOX",3089:"SCISSOR_TEST",3106:"COLOR_CLEAR_VALUE",3107:"COLOR_WRITEMASK",3317:"UNPACK_ALIGNMENT",3333:"PACK_ALIGNMENT",3379:"MAX_TEXTURE_SIZE",3386:"MAX_VIEWPORT_DIMS",3408:"SUBPIXEL_BITS",3410:"RED_BITS",3411:"GREEN_BITS",3412:"BLUE_BITS",3413:"ALPHA_BITS",3414:"DEPTH_BITS",3415:"STENCIL_BITS",3553:"TEXTURE_2D",4352:"DONT_CARE",4353:"FASTEST",4354:"NICEST",5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5124:"INT",5125:"UNSIGNED_INT",5126:"FLOAT",5386:"INVERT",5890:"TEXTURE",6401:"STENCIL_INDEX",6402:"DEPTH_COMPONENT",6403:"RED",6406:"ALPHA",6407:"RGB",6408:"RGBA",6409:"LUMINANCE",6410:"LUMINANCE_ALPHA",7680:"KEEP",7681:"REPLACE",7682:"INCR",7683:"DECR",7936:"VENDOR",7937:"RENDERER",7938:"VERSION",9728:"NEAREST",9729:"LINEAR",9984:"NEAREST_MIPMAP_NEAREST",9985:"LINEAR_MIPMAP_NEAREST",9986:"NEAREST_MIPMAP_LINEAR",9987:"LINEAR_MIPMAP_LINEAR",10240:"TEXTURE_MAG_FILTER",10241:"TEXTURE_MIN_FILTER",10242:"TEXTURE_WRAP_S",10243:"TEXTURE_WRAP_T",10497:"REPEAT",10752:"POLYGON_OFFSET_UNITS",16384:"COLOR_BUFFER_BIT",32769:"CONSTANT_COLOR",32770:"ONE_MINUS_CONSTANT_COLOR",32771:"CONSTANT_ALPHA",32772:"ONE_MINUS_CONSTANT_ALPHA",32773:"BLEND_COLOR",32774:"FUNC_ADD",32777:"BLEND_EQUATION_RGB",32778:"FUNC_SUBTRACT",32779:"FUNC_REVERSE_SUBTRACT",32819:"UNSIGNED_SHORT_4_4_4_4",32820:"UNSIGNED_SHORT_5_5_5_1",32823:"POLYGON_OFFSET_FILL",32824:"POLYGON_OFFSET_FACTOR",32854:"RGBA4",32855:"RGB5_A1",32873:"TEXTURE_BINDING_2D",32926:"SAMPLE_ALPHA_TO_COVERAGE",32928:"SAMPLE_COVERAGE",32936:"SAMPLE_BUFFERS",32937:"SAMPLES",32938:"SAMPLE_COVERAGE_VALUE",32939:"SAMPLE_COVERAGE_INVERT",32968:"BLEND_DST_RGB",32969:"BLEND_SRC_RGB",32970:"BLEND_DST_ALPHA",32971:"BLEND_SRC_ALPHA",33071:"CLAMP_TO_EDGE",33170:"GENERATE_MIPMAP_HINT",33189:"DEPTH_COMPONENT16",33306:"DEPTH_STENCIL_ATTACHMENT",33321:"R8",33635:"UNSIGNED_SHORT_5_6_5",33648:"MIRRORED_REPEAT",33901:"ALIASED_POINT_SIZE_RANGE",33902:"ALIASED_LINE_WIDTH_RANGE",33984:"TEXTURE0",33985:"TEXTURE1",33986:"TEXTURE2",33987:"TEXTURE3",33988:"TEXTURE4",33989:"TEXTURE5",33990:"TEXTURE6",33991:"TEXTURE7",33992:"TEXTURE8",33993:"TEXTURE9",33994:"TEXTURE10",33995:"TEXTURE11",33996:"TEXTURE12",33997:"TEXTURE13",33998:"TEXTURE14",33999:"TEXTURE15",34e3:"TEXTURE16",34001:"TEXTURE17",34002:"TEXTURE18",34003:"TEXTURE19",34004:"TEXTURE20",34005:"TEXTURE21",34006:"TEXTURE22",34007:"TEXTURE23",34008:"TEXTURE24",34009:"TEXTURE25",34010:"TEXTURE26",34011:"TEXTURE27",34012:"TEXTURE28",34013:"TEXTURE29",34014:"TEXTURE30",34015:"TEXTURE31",34016:"ACTIVE_TEXTURE",34024:"MAX_RENDERBUFFER_SIZE",34041:"DEPTH_STENCIL",34055:"INCR_WRAP",34056:"DECR_WRAP",34067:"TEXTURE_CUBE_MAP",34068:"TEXTURE_BINDING_CUBE_MAP",34069:"TEXTURE_CUBE_MAP_POSITIVE_X",34070:"TEXTURE_CUBE_MAP_NEGATIVE_X",34071:"TEXTURE_CUBE_MAP_POSITIVE_Y",34072:"TEXTURE_CUBE_MAP_NEGATIVE_Y",34073:"TEXTURE_CUBE_MAP_POSITIVE_Z",34074:"TEXTURE_CUBE_MAP_NEGATIVE_Z",34076:"MAX_CUBE_MAP_TEXTURE_SIZE",34338:"VERTEX_ATTRIB_ARRAY_ENABLED",34339:"VERTEX_ATTRIB_ARRAY_SIZE",34340:"VERTEX_ATTRIB_ARRAY_STRIDE",34341:"VERTEX_ATTRIB_ARRAY_TYPE",34342:"CURRENT_VERTEX_ATTRIB",34373:"VERTEX_ATTRIB_ARRAY_POINTER",34466:"NUM_COMPRESSED_TEXTURE_FORMATS",34467:"COMPRESSED_TEXTURE_FORMATS",34660:"BUFFER_SIZE",34661:"BUFFER_USAGE",34816:"STENCIL_BACK_FUNC",34817:"STENCIL_BACK_FAIL",34818:"STENCIL_BACK_PASS_DEPTH_FAIL",34819:"STENCIL_BACK_PASS_DEPTH_PASS",34877:"BLEND_EQUATION_ALPHA",34921:"MAX_VERTEX_ATTRIBS",34922:"VERTEX_ATTRIB_ARRAY_NORMALIZED",34930:"MAX_TEXTURE_IMAGE_UNITS",34962:"ARRAY_BUFFER",34963:"ELEMENT_ARRAY_BUFFER",34964:"ARRAY_BUFFER_BINDING",34965:"ELEMENT_ARRAY_BUFFER_BINDING",34975:"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",35040:"STREAM_DRAW",35044:"STATIC_DRAW",35048:"DYNAMIC_DRAW",35632:"FRAGMENT_SHADER",35633:"VERTEX_SHADER",35660:"MAX_VERTEX_TEXTURE_IMAGE_UNITS",35661:"MAX_COMBINED_TEXTURE_IMAGE_UNITS",35663:"SHADER_TYPE",35664:"FLOAT_VEC2",35665:"FLOAT_VEC3",35666:"FLOAT_VEC4",35667:"INT_VEC2",35668:"INT_VEC3",35669:"INT_VEC4",35670:"BOOL",35671:"BOOL_VEC2",35672:"BOOL_VEC3",35673:"BOOL_VEC4",35674:"FLOAT_MAT2",35675:"FLOAT_MAT3",35676:"FLOAT_MAT4",35678:"SAMPLER_2D",35680:"SAMPLER_CUBE",35712:"DELETE_STATUS",35713:"COMPILE_STATUS",35714:"LINK_STATUS",35715:"VALIDATE_STATUS",35716:"INFO_LOG_LENGTH",35717:"ATTACHED_SHADERS",35718:"ACTIVE_UNIFORMS",35719:"ACTIVE_UNIFORM_MAX_LENGTH",35720:"SHADER_SOURCE_LENGTH",35721:"ACTIVE_ATTRIBUTES",35722:"ACTIVE_ATTRIBUTE_MAX_LENGTH",35724:"SHADING_LANGUAGE_VERSION",35725:"CURRENT_PROGRAM",36003:"STENCIL_BACK_REF",36004:"STENCIL_BACK_VALUE_MASK",36005:"STENCIL_BACK_WRITEMASK",36006:"FRAMEBUFFER_BINDING",36007:"RENDERBUFFER_BINDING",36048:"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",36049:"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",36050:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",36051:"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",36053:"FRAMEBUFFER_COMPLETE",36054:"FRAMEBUFFER_INCOMPLETE_ATTACHMENT",36055:"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",36057:"FRAMEBUFFER_INCOMPLETE_DIMENSIONS",36061:"FRAMEBUFFER_UNSUPPORTED",36064:"COLOR_ATTACHMENT0",36096:"DEPTH_ATTACHMENT",36128:"STENCIL_ATTACHMENT",36160:"FRAMEBUFFER",36161:"RENDERBUFFER",36162:"RENDERBUFFER_WIDTH",36163:"RENDERBUFFER_HEIGHT",36164:"RENDERBUFFER_INTERNAL_FORMAT",36168:"STENCIL_INDEX8",36176:"RENDERBUFFER_RED_SIZE",36177:"RENDERBUFFER_GREEN_SIZE",36178:"RENDERBUFFER_BLUE_SIZE",36179:"RENDERBUFFER_ALPHA_SIZE",36180:"RENDERBUFFER_DEPTH_SIZE",36181:"RENDERBUFFER_STENCIL_SIZE",36194:"RGB565",36336:"LOW_FLOAT",36337:"MEDIUM_FLOAT",36338:"HIGH_FLOAT",36339:"LOW_INT",36340:"MEDIUM_INT",36341:"HIGH_INT",36346:"SHADER_COMPILER",36347:"MAX_VERTEX_UNIFORM_VECTORS",36348:"MAX_VARYING_VECTORS",36349:"MAX_FRAGMENT_UNIFORM_VECTORS",37440:"UNPACK_FLIP_Y_WEBGL",37441:"UNPACK_PREMULTIPLY_ALPHA_WEBGL",37442:"CONTEXT_LOST_WEBGL",37443:"UNPACK_COLORSPACE_CONVERSION_WEBGL",37444:"BROWSER_DEFAULT_WEBGL"};var L={alpha:!1,depth:!0,premultipliedAlpha:!1};let U=0;function C(){let E=[0,0,0,0],_=0;this.id="WebGLContext"+U++,this.canvas,this.gl,this.width=0,this.height=0,this.webgl2=e(),this.isMobile=r,this.CONTEXT_LOST="contextLost",this.CONTEXT_RESTORED="contextRestored",this.shaderCount=0,this.bufferCount=0,this.init=function(E,_={}){const A=t({},L,_);if(void 0!==E){if(E instanceof HTMLCanvasElement){this.canvas=E;let T=this.webgl2?"webgl2":"webgl1";_.webgl1&&(T="webgl1",this.webgl2=!1),this.gl=E.getContext(T,A)}else E instanceof WebGL2RenderingContext?(this.webgl2=!0,this.gl=E,this.canvas=E.canvas):E instanceof WebGLRenderingContext?(this.webgl2=!1,this.gl=E,this.canvas=E.canvas):console.error("The source has to be one of the following : Canvas, WebGLRenderingContext or WebGL2RenderingContext");this.canvas.addEventListener("webglcontextlost",T),this.canvas.addEventListener("webglcontextrestored",R),this.extensions=(E=>{const _=E instanceof WebGL2RenderingContext,T={};return(_?S:I).forEach((_=>{T[_]=E.getExtension(_)})),_||(T.OES_vertex_array_object||console.error("OES_vertex_array_object extension is not supported"),N(E,"OES_vertex_array_object"),N(E,"ANGLE_instanced_arrays"),N(E,"WEBGL_draw_buffers")),T})(this.gl),(E=>{for(const _ in i)E[_]?console.log("already exist : ",_):E[_]=i[_];if(E.webgl2){const _=/^[^a-z]*$/;for(const T in E.gl)_.test(T)&&-1===T.indexOf("FLOAT")&&(E[T]=E.gl[T],i[T]=E.gl[T],n[E[T]]=T)}})(this),this.setSize(this.canvas.width,this.canvas.height),this.enable(this.BLEND),this.enableAlphaBlending(),this.enable(this.DEPTH_TEST),this.enable(this.CULL_FACE),this.cullFace(s.BACK)}else{const E=document.createElement("canvas");this.init(E,A)}},this.clear=function(E=0,_=0,T=0,R=0){const{gl:A}=this;A.clearColor(E,_,T,R),A.clear(A.COLOR_BUFFER_BIT|A.DEPTH_BUFFER_BIT)},this.setSize=function(E,T){this.width=Math.floor(E),this.height=Math.floor(T),this.canvas.width=this.width,this.canvas.height=this.height,_=this.width/this.height,this.viewport(0,0,this.width,this.height)},this.viewport=function(_,T,R,A){E=[_,T,R,A],this.gl.viewport(_,T,R,A)},this.getViewport=function(){return E},this.getAspectRatio=function(){return _},this.enable=function(E){this.gl.enable(E)},this.disable=function(E){this.gl.disable(E)},this.cullFace=function(E){this.gl.cullFace(E)},this.enableAlphaBlending=function(){const{gl:E}=this;E.blendFunc(E.SRC_ALPHA,E.ONE_MINUS_SRC_ALPHA)},this.enableAdditiveBlending=function(){const{gl:E}=this;E.blendFunc(E.ONE,E.ONE)},this.useShader=function(E){this.shaderProgram=E.shaderProgram,this.gl.useProgram(this.shaderProgram)},this.draw=function(E){if(E.length)return void E.forEach((E=>this.draw(E)));E.bind(this);const{drawType:_}=E,{gl:T}=this;E.isInstanced?T.drawElementsInstanced(E.drawType,E.iBuffer.numItems,T.UNSIGNED_SHORT,0,E.numInstance):_===T.POINTS?T.drawArrays(_,0,E.vertexSize):T.drawElements(_,E.iBuffer.numItems,T.UNSIGNED_SHORT,0),E.unbind()},this.destroy=function(E=!0){this.gl.getExtension("WEBGL_lose_context").loseContext(),E&&void 0!==this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas)};const T=()=>{this.emit(this.CONTEXT_LOST)},R=()=>{this.emit(this.CONTEXT_RESTORED)}}C.prototype=Object.assign(Object.create(E.prototype),{constructor:C});const s=new C;function O(E,_){this.vertexShader=E||"\n#define SHADER_NAME BASIC_VERTEX\nprecision highp float;attribute vec3 aVertexPosition;attribute vec2 aTextureCoord;void main(void){gl_Position=vec4(aVertexPosition,1.0);}",this.fragmentShader=_||"precision highp float;void main(void){gl_FragColor=vec4(1.0);}",this.GL,this.shaderProgram,this.bind=function(E){if(void 0===this.GL||E===this.GL){if(this.GL=E||s,!this.shaderProgram){const E=T(this.vertexShader,!0),_=T(this.fragmentShader,!1);R(E,_)}this.GL.useShader(this)}else console.error("this shader has been bind to a different WebGL Rendering Context")},this.uniform=function(E,_,T){},this.destroy=function(){const{gl:E}=this.GL;E.deleteProgram(this.shaderProgram),this.GL.shaderCount--};const T=(E,_)=>{const{GL:T}=this,{gl:R}=this.GL,A=_?T.VERTEX_SHADER:T.FRAGMENT_SHADER,t=R.createShader(A);return R.shaderSource(t,E),R.compileShader(t),R.getShaderParameter(t,R.COMPILE_STATUS)?t:(console.warn("Error in Shader : ",R.getShaderInfoLog(t)),console.log((E=>{const _=E.split("\n");for(let E=0;E<_.length;E++)_[E]=`${E+1}: ${_[E]}`;return _.join("\n")})(E)),null)},R=(E,_)=>{const{gl:T}=this.GL;this.shaderProgram=T.createProgram(),T.attachShader(this.shaderProgram,E),T.attachShader(this.shaderProgram,_),T.deleteShader(E),T.deleteShader(_),T.linkProgram(this.shaderProgram),this.GL.shaderCount++}}function o(E=i.TRIANGLES){this.drawType=E,this.isInstanced=!1;const _=[];let T,R,A,t,e=[],N=!0;this.bufferData=function(E,_,T,R=i.STATIC_DRAW,A=!1){let t,e=[];if("number"==typeof E[0]){if(t=E,void 0===T)return console.error("Missing element size for flatten data :",_),this;for(let E=0;E<t.length;E+=T){const _=[];for(let R=0;R<T;R++)_.push(t[E+R]);e.push(_)}}else e=E,t=(E=>{if(E[0]instanceof Float32Array)return E.reduce(((E,_)=>{for(let T=0;T<_.length;T++)E.push(_[T]);return E}),[]);return E.flat()})(E);const N=void 0===T?E[0].length:T;return I(t,E,_,N,R,A)},this.bufferVertex=function(E,_=i.STATIC_DRAW){return this.bufferData(E,"aVertexPosition",3,_)},this.bufferTexCoord=function(E,_=i.STATIC_DRAW){return this.bufferData(E,"aTextureCoord",2,_)},this.bufferNormal=function(E,_=i.STATIC_DRAW){return this.bufferData(E,"aNormal",3,_)},this.bufferIndex=function(E,_=i.STATIC_DRAW){return T=_,R=new Uint16Array(E),A=R.length,this},this.bind=function(E){if(void 0!==this.GL&&E!==this.GL)return void console.error("this mesh has been bind to a different WebGL Rendering Context");this.GL=E||GL;const{gl:_}=this.GL;S(),_.bindVertexArray(t),this.vertexSize=this.getSource("aVertexPosition").length},this.unbind=function(){},this.getAttribute=function(E){return _.find((_=>_.name===E))},this.getSource=function(E){const _=this.getAttribute(E);return _?_.source:[]},this.destroy=function(){};const I=(E,T,R,A,t=i.STATIC_DRAW,N=!1)=>{const I=t;this.isInstanced=N||this.isInstanced;const S=new Float32Array(E),r=this.getAttribute(R);return r?(r.itemSize=A,r.dataArray=S,r.source=T):_.push({name:R,source:T,itemSize:A,usage:I,dataArray:S,isInstanced:N}),e.push(R),this},S=()=>{const{shaderProgram:E,gl:T}=this.GL;0!=e.length&&(t||(t=T.createVertexArray()),T.bindVertexArray(t),_.forEach((_=>{if(-1!==e.indexOf(_.name)){const R=function(E,_){let T;return void 0!==E.buffer?T=E.buffer:(T=_.createBuffer(),E.buffer=T),T}(_,T);T.bindBuffer(T.ARRAY_BUFFER,R),T.bufferData(T.ARRAY_BUFFER,_.dataArray,_.usage);const A=((E,_,T)=>(void 0===_.cacheAttribLoc&&(_.cacheAttribLoc={}),void 0===_.cacheAttribLoc[T]&&(_.cacheAttribLoc[T]=E.getAttribLocation(_,T)),_.cacheAttribLoc[T]))(T,E,_.name);A>=0&&(T.enableVertexAttribArray(A),T.vertexAttribPointer(A,_.itemSize,T.FLOAT,!1,0,0)),_.attrPosition=A,_.isInstanced&&T.vertexAttribDivisor(A,1)}})),r(),T.bindVertexArray(null),N=!1,e=[])},r=()=>{const{gl:E}=this.GL;N&&(this.iBuffer||(this.iBuffer=E.createBuffer()),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,this.iBuffer),E.bufferData(E.ELEMENT_ARRAY_BUFFER,R,T),this.iBuffer.itemSize=1,this.iBuffer.numItems=A)}}const a=(E,_,T=!1)=>T?E.getContext("webgl2",_)||E.getContext("experimental-webgl2",_):E.getContext("webgl",_)||E.getContext("experimental-webgl",_);Array.prototype.flat||Object.defineProperty(Array.prototype,"flat",{configurable:!0,value:function E(){var _=isNaN(arguments[0])?1:Number(arguments[0]);return _?Array.prototype.reduce.call(this,(function(T,R){return Array.isArray(R)?T.push.apply(T,E.call(R,_-1)):T.push(R),T}),[]):Array.prototype.slice.call(this)},writable:!0});export{s as GL,O as GLShader,C as GLTool,o as Mesh,e as checkWebGL2,a as getWebGLContext};
